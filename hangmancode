import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import javax.imageio.*;
import java.awt.image.BufferedImage;
import java.util.*;

/**
  A really bad looking game of Hangman
	@author Christopher Wong
	
  Words in text file - file reader
  Random generator
	GUI?

*/

public class HangmanAspect{

/**
	Throw exception in case word.txt isnt found. Maybe provide a try/catch to specify an error message
*/
	
	public HangmanAspect() throws FileNotFoundException
	{	
		//a JTextField input will substitute this in the actual program
		Scanner input = new Scanner(System.in);
		
		//make an arraylist to use throughout the program for all clients
    //words from text put here?
		ArrayList<String> wordList = new ArrayList<String>();
		
		//arraylist to use to store letters already guessed
		ArrayList<Character> lettersGuessed = new ArrayList<Character>();
		
		//boolean option = true;	
		//String choice;
		
	//	do{
		
			//to read in the words txt file and add each other to arraylist
			Scanner filereader = new Scanner (new File("word.txt")); 
			while(filereader.hasNextLine())
			{
				String wordAdd = filereader.nextLine();
				wordList.add(wordAdd);
			}
			
			//random generator to pick a random word from the list so each client will have a diff. word
			Random random = new Random();
			int j = random.nextInt(12);
			String word = wordList.get(j);
			
			//should the max number of guesses be less or greater? i will use 6 here.
			int maxTries = 6; 
		
			//create a string builder object to replace letters of word with _ or its letter later
			StringBuilder build = new StringBuilder(word.length());
			
			//for loop to replace all letters with a _ compared to length of selected random word
			//probably enlarge this in the GUI part - Font
			for(int i = 0; i < word.length(); i++) 
			{
				build.append("-");
			}
			
			//length of word
			int charCount = word.length();

			//loops while the player still has a number of guesses
			//AND while length of word being guessed has a number of letters remaining > 0
			while (maxTries > 0 && charCount > 0) 
			{	
				//turn every letter in the word to a char - stored in a char array
				char[] wordArray = word.toCharArray(); 
							
				//print out the word as underscores (_) or what's been guessed
				System.out.println(build.toString());
				
				//char[] letterGuessed = new char[15]; //doesnt work
				
				//a JTextField will replace this for inputted letter
				System.out.println("Enter letter: ");	
				
				//have the letter inputted as a char to then add to arraylist to show later for user
				char guessChar = input.next().toCharArray()[0];
				lettersGuessed.add(guessChar);
									
									//doesn't work with array
									//for(int i =0; i<letterGuessed.length;i++)
									//{
									//	letterGuessed[i] = guessChar;
									//}
				
				//boolean value, not found false, found true
				boolean foundletter = false;
				
				//loop to compare inputted char letter with the guess word char array letter elements
				for(int i = 0; i < word.length(); i++)
				{
					//comparing letter input with the whole word array
					//if a match is found, set boolean true
					if(guessChar == wordArray[i])
					{	
						foundletter=true;
						//change that location in the word char array from underscore to the correct guessed letter 
						build.setCharAt(i, guessChar);
						//decrease the number of char left to guess by 1
						charCount--;
					}
				}

				//how many tries allowed???
				//print out the arraylist of char guessed and inputted already
				//JOptionPane in the actual GUI project or a little JTextField or Area of its own
				System.out.println("Letters tried: ");
				
				for(int i = 0; i<lettersGuessed.size();i++)
				{
					System.out.print(lettersGuessed.get(i)+", ");	
				}
				
				//if the underscores are gone and the word matches the word to be guessed
				//JOptionPane in the actual GUI Project
				if(build.toString().equals(word))
				{
					//you won! max tries to 0 to tell that its over
					System.out.println("\nYou Won.");
					System.out.println("Correct! You guessed " + word);
					maxTries = 0;
					break;	//break from loop
				}	
				
				//incorrect guesses, decrease max tries by 1 each time
				else if (!foundletter)
				{
					maxTries--;
					//max tries = 0 no more tries, you lose
					//JOptionPane in actual GUI
					if (maxTries == 0)
					{
						System.out.println("\nYou Lose.");
						System.out.println("The correct word was " + word);
						break;
					}
				}
				
				System.out.println("\nYou have "  + maxTries + " " + "wrong guesses left");

			}	
		
		//play again option?
		System.out.println("Play again? (y/n)");
		input.nextLine();
		choice = input.nextLine();
		option = (choice.equalsIgnoreCase("y"));
			if (!option) {
			System.out.println("Goodbye!");
		}
		//}while (option == true); 
	}
	

	public static void main(String[] args) throws FileNotFoundException 
	{
		HangmanAspect hangman = new HangmanAspect();
	}
}
      ...
      //really not expecting anyone to edit this...
}
